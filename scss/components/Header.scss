@import url('./App.scss');

@mixin blur-header-img {
  filter: blur(0px);
}

.paralax {
  /* Display and position the pseudo-element */
  content: ' ';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  /* Move the pseudo-element back away from the camera,
     * then scale it back up to fill the viewport.
     * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  transform: translateZ(-1px) scale(1.6);
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */
  z-index: -1;
}

.section {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 50vh;

  /* For text formatting. */
  display: flex;
  justify-content: center;
  text-shadow: 0 0 5px #000;
}

.adjustRowWidth {
  width: 77%;
}

.noPadding {
  padding: 0;
}

.lastPictureContainer {
  display: flex;
  flex-direction: column;
}

//images
.analysisImg {
  width: 18rem;
  height: 9rem;
  @include blur-header-img;
}

.statisticImg {
  width: 18rem;
  height: 14rem;
  @include blur-header-img;
}

.programmerImg {
  width: 27rem;
  @include blur-header-img;
}

.businessImg {
  width: 20rem;
  height: 18rem;
  @include blur-header-img;
}

.leftSideHeaderImg {
  @include blur-header-img;
}

//overlay

.overlay {
  width: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.6); /* Black background with opacity */
  z-index: 1;
}
